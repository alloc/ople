/**
 * DO NOT EDIT THIS DIRECTLY!
 * Generated by @ople/codegen
 */
import { defineBackend, OpleProtocol, OpleCollection, OpleListener } from "@ople/client"

interface Collections {
  users: OpleCollection<User>
}

interface Functions {
  bar(bar: Bar): void
  foo(): void
}

interface Signals {
  /**
   * A user logged in.
   */
  onLogin(handler: (user: OpleRef<User>) => boolean | void): OpleListener
  onLogin(target: User, handler: () => boolean | void): OpleListener
  onFoo(handler: (foo: Foo) => boolean | void): OpleListener
}

const backend = defineBackend<Collections, Functions, Signals>({
  protocol: OpleProtocol.ws,
  url: "ws://localhost:3000/@ople-dev",
})

export default backend

const { functions, signals } = backend

export const bar = functions.bar
export const foo = functions.foo

export const onLogin = signals.onLogin
export const onFoo = signals.onFoo

interface Bar {
  x: true
}

export interface User {
  name: string
}

interface Foo {
  bar: Bar
}